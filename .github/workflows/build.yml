name: BearMod Build Pipeline

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install NDK
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.1.8937393"
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_ENV

    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle/caches
          .gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make Gradlew Executable
      run: chmod +x ./gradlew

    - name: Clean Project
      run: ./gradlew clean

    - name: Build Debug APK
      run: ./gradlew assembleDebug --stacktrace --no-daemon

    - name: Build Release APK
      run: ./gradlew assembleRelease --stacktrace --no-daemon

    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest --stacktrace --no-daemon

    - name: Generate Build Report
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Debug APK**: $(ls -la app/build/outputs/apk/debug/*.apk | awk '{print $9, "(" $5 " bytes)"}')" >> $GITHUB_STEP_SUMMARY
        echo "- **Release APK**: $(ls -la app/build/outputs/apk/release/*.apk | awk '{print $9, "(" $5 " bytes)"}')" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: bearmod-debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: bearmod-release-apk
        path: app/build/outputs/apk/release/*.apk
        retention-days: 90

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/test-results/
        retention-days: 30

  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: java

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: bearmod-release-apk
        path: ./release

    - name: Generate Release Notes
      id: release_notes
      run: |
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "## BearMod Release $(date +%Y.%m.%d)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Changes" >> $GITHUB_OUTPUT
        git log --oneline -10 >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### APK Information" >> $GITHUB_OUTPUT
        echo "- **Size**: $(ls -la ./release/*.apk | awk '{print $5}') bytes" >> $GITHUB_OUTPUT
        echo "- **Build**: $(date)" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: release-${{ github.run_number }}
        name: BearMod Release ${{ github.run_number }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        files: ./release/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
